on: 
    pull_request: 
        branches: dev

permissions: write-all
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  MAX_LINES_PR: ${{ secrets.MAX_LINES_PR || 600 }}
  PR_COMMENTS_URL: ${{ github.event.pull_request.comments_url }}
  PR_ADDITIONS: ${{ github.event.pull_request.additions }}
  PR_DELETIONS: ${{ github.event.pull_request.deletions }}
jobs:
    check_pr_size:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v2
              with:
                fetch-depth: 0

            - name: Obtener la suma de lineas modificadas de todos los -lock.
              run: |
                chmod +x scripts/lines-of-lock.sh

                PR_MODIFY_LOCK=$(scripts/lines-of-lock.sh)
                
                # Verifica si es nulo
                PR_MODIFY_LOCK=${PR_MODIFY_LOCK:-0}
                
                echo "PR_MODIFY_LOCK=${PR_MODIFY_LOCK}" >> $GITHUB_ENV
 
            - name: obtener todos los datos para el reporte
              run: |
                # Obtener los resultados
                # git_diff_result=$(git diff --stat origin/dev)
                
                # extraer valores valtantes
                
                PR_MODIFY_ALL=$(($PR_ADDITIONS + $PR_DELETIONS))
                PR_MODIFY_REST=$(($PR_MODIFY_ALL - $PR_MODIFY_LOCK))
                
                if [ $PR_MODIFY_REST -gt $MAX_LINES_PR ]; then
                    PR_EXTRA=$(($PR_MODIFY_REST - $MAX_LINES_PR))
                else
                    PR_EXTRA=0
                fi

                echo "PR_MODIFY_ALL=${PR_MODIFY_ALL}" >> $GITHUB_ENV
                echo "PR_MODIFY_REST=${PR_MODIFY_REST}" >> $GITHUB_ENV
                echo "PR_EXTRA=${PR_EXTRA}" >> $GITHUB_ENV


            - name: Generar el mensaje para comentar en el pr
              run: |
                # TEMPLATE_MESSAGE=$(cat "templates/pr-report.txt")
                TEMPLATE_MESSAGE=$(< "templates/pr-report.txt")
                
                # Reemplazar las variables
                MESSAGE="${TEMPLATE_MESSAGE//\$PR_ADDITIONS/$PR_ADDITIONS}"
                MESSAGE="${MESSAGE//\$PR_DELETIONS/$PR_DELETIONS}"
                MESSAGE="${MESSAGE//\$PR_MODIFY_ALL/$PR_MODIFY_ALL}"
                MESSAGE="${MESSAGE//\$PR_MODIFY_LOCK/$PR_MODIFY_LOCK}"
                MESSAGE="${MESSAGE//\$PR_MODIFY_REST/$PR_MODIFY_REST}"
                MESSAGE="${MESSAGE//\$PR_EXTRA/$PR_EXTRA}"

                echo "MESSAGE=${MESSAGE}" >> $GITHUB_ENV

                
            - name: Eliminar reportes previos de los comentarios
              run: |
              
                COMMENTS=$(curl -L \
                    -H "Accept: application/vnd.github+json" \
                    -H "Authorization: token $GITHUB_TOKEN" \
                    -H "X-GitHub-Api-Version: 2022-11-28" \
                    $PR_COMMENTS_URL | jq '.[] | select(.body | contains("Resultados de la pre-revisión del PR"))')
                    
                COMMENTS_ID=$(echo "$COMMENTS" | jq -r '.id')
                
                # Recorrer el array de IDs y eliminar cada uno
                
                IFS=$'\n' # Establecer el separador de campo para nueva línea
                for ID in $COMMENTS_ID; do
                    
                    COMMENT_URL="${{ github.api_url }}/repos/${{ github.repository }}/issues/comments/$ID"
                
                    curl -L \
                        -X DELETE \
                        -H "Accept: application/vnd.github+json" \
                        -H "Authorization: token $GITHUB_TOKEN" \
                        -H "X-GitHub-Api-Version: 2022-11-28" \
                        $COMMENT_URL
                done                

            - name: Realizar el comentario en el pr
              run: |
                curl \
                -X POST \
                $PR_COMMENTS_URL \
                -H "Content-Type: application/json" \
                -H "Authorization: token $GITHUB_TOKEN" \
                --data "{ \"body\": \"$MESSAGE\" }"
                
            - name: Comprobar el numero de lineas modificadas y mostrar un error si no se cumple el limite
              run: |
                if [[ $PR_MODIFY_REST -gt $MAX_LINES_PR ]]
                then
                    echo "Warning - total lines changed is greater than" $MAX_LINES_PR.
                    echo "Please consider breaking this PR down."
                    exit 1
                fi
